apiVersion: apps/v1
kind: Deployment
metadata:
  name: ac-webapp
  namespace: aspirepress
  labels:
    app: ac-webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ac-webapp
  template:
    metadata:
      labels:
        app: ac-webapp
    spec:
      restartPolicy: Always
      containers:
        # when updating the image tag, make sure to update ac-queue-worker too!
        - name: ac-webapp
          image: 'ghcr.io/aspirepress/aspirecloud:0.7'
          envFrom:
            - configMapRef:
                name: ac-configmap
            - secretRef:
                name: ac-secrets
          ports:
            - containerPort: 80
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ac-queue-worker
  namespace: aspirepress
  labels:
    app: ac-queue-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ac-queue-worker
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ac-queue-worker
    spec:
      restartPolicy: Always
      containers:
        # when updating the image tag, make sure to update ac-webapp too!
        - name: queue-worker
          image: 'ghcr.io/aspirepress/aspirecloud-worker:0.7'
          command: [ 'bin/queue-worker' ]
          envFrom:
            - configMapRef:
                name: ac-configmap
            - secretRef:
                name: ac-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: ac-webapp
  namespace: aspirepress
spec:
  ports:
    - port: 80
  selector:
    app: ac-webapp
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ac-webapp
  namespace: aspirepress
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`api.aspirecloud.io`)
      services:
        - name: ac-webapp
          port: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ac-configmap
data:
  # AspirePress Related Configuration
  API_AUTHENTICATION_ENABLED: "true"

  APP_NAME: "aspirecloud"
  APP_URL: "https://api.aspirecloud.io"
  APP_ENV: "production"
  APP_KEY: "base64:3B+wIIOAiiQ61++I6lqwPcjYZ3PZmqskdHJUpYFbfjU="
  LOG_CHANNEL: "stack"
  LOG_STACK: "single"
  LOG_DEPRECATIONS_CHANNEL: "null"
  LOG_LEVEL: "debug"

  DB_CONNECTION: "pgsql"
  DB_HOST: "postgresql.aspirepress.svc.cluster.local"
  DB_PORT: "5432"
  DB_DATABASE: "aspirecloud"
  DB_USERNAME: "aspirecloud"

  SESSION_DRIVER: "redis"
  SESSION_LIFETIME: "120"
  SESSION_ENCRYPT: "false"
  SESSION_PATH: "/"
  SESSION_DOMAIN: "null"

  BROADCAST_CONNECTION: "log"
  FILESYSTEM_DISK: "s3"
  QUEUE_CONNECTION: "redis"

  CACHE_STORE: "redis"
  CACHE_PREFIX: ""

  REDIS_CLIENT: "predis"
  REDIS_HOST: "redis-master.aspirepress.svc.cluster.local"
  REDIS_PORT: "6379"

  #  MAIL_MAILER: "smtp"
  #  MAIL_HOST: "mail.aspiredev.org"
  #  MAIL_PORT: "1025"
  #  MAIL_USERNAME: ""
  #  MAIL_PASSWORD: ""
  #  MAIL_ENCRYPTION: ""
  #  MAIL_FROM_ADDRESS: "do-not-reply@aspirepress.org"
  #  MAIL_FROM_NAME: "AspireCloud"

  # used for s3 (and only s3)
  AWS_DEFAULT_REGION: "us-west-1"
  AWS_BUCKET: "aspiresync-dev"
  AWS_ENDPOINT: "https://s3.us-west-1.wasabisys.com/"
  AWS_USE_PATH_STYLE_ENDPOINT: "false"
