services:
  webapp:
    build:
      context: .
      dockerfile: docker/webapp/Dockerfile
      target: dev
    ports:
      - ${LOCAL_HTTP_PORT:-8099}:80
    volumes:
      - .:/var/www/html
    networks:
      traefik: ~
      aspirepress-cdn: ~
      application:
        aliases:
          - 'cdn.aspirepress.local'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ap-api.rule=Host(`api.aspirecloud.local`)"
      - "traefik.http.routers.ap-api-https.rule=Host(`api.aspirecloud.local`)"
      - "traefik.http.routers.ap-api-https.tls=true"

  redis:
    image: redis:latest
    networks:
      - aspirepress-cdn

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=password
      - PGDATA=/opt/pgdata
      - POSTGRES_DB=aspirecloud
    ports:
      - "${LOCAL_POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgresdata:/opt/pgdata
    networks:
      - aspirepress-cdn
      - application

  cli:
    build:
      context: .
      dockerfile: docker/cli/Dockerfile
      target: dev
    volumes:
      - .:/var/www/html
    networks:
      aspirepress-cdn: ~
      application:
        aliases:
          - 'cdn.aspirepress.local'

  mailhog:
    restart: on-failure
    image: mailhog/mailhog
    entrypoint: [ "/bin/sh", "-c", "MailHog >/dev/null 2>&1" ] # mailhog's logging is spammy and useless
    ports:
      - "${LOCAL_MAILHOG_UI_PORT:-8525}:8025"
    networks:
      - aspirepress-cdn
      - application

networks:
  aspirepress-cdn: ~
  application:
    driver: bridge
    name: wp-services
    external: true
  traefik:
    external: true

volumes:
  postgresdata: ~
